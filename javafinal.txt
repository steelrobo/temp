Editable table
Code:
package prac4;
import java.awt.BorderLayout;
import java.awt.Container;
import javax.swing.JApplet;
import javax.swing.JScrollPane;
import javax.swing.JTable;
public class EditTable extends JApplet {
	JTable jt; JScrollPane jsp;
 public void init() {
		Container c = getContentPane();
		c.setLayout(new BorderLayout());
		String cols[] = {"Employee No", "Employee Name", "Employee Salary", Designation"};
		Object data[][] = {{"1", "Abhishek", "1000", "Robot Analyst"},
				{"2", "Chitti", "1000", "Principal"},
				{"3", "AlanWalker", "1000", "HOD"},};		
		jt = new JTable(data, cols);
		jsp = new JScrollPane(jt);
		c.add(jsp);
	}
}


Popup menu
Code:
import java.awt.*;  
import java.awt.event.*;  
class PopupMenuExample  
{  
     PopupMenuExample(){  
         final Frame f= new Frame("PopupMenu Example");  
         final PopupMenu popupmenu = new PopupMenu("Edit");   
         MenuItem cut = new MenuItem("Cut");  
         cut.setActionCommand("Cut");  
         MenuItem copy = new MenuItem("Copy");  
         copy.setActionCommand("Copy");  
         MenuItem paste = new MenuItem("Paste");  
         paste.setActionCommand("Paste");      
         popupmenu.add(cut);  
         popupmenu.add(copy);  
         popupmenu.add(paste);        
         f.addMouseListener(new MouseAdapter() {  
            public void mouseClicked(MouseEvent e) {              
                popupmenu.show(f , e.getX(), e.getY());  
            }                 
         });  
         f.add(popupmenu);   
         f.setSize(400,400);  
         f.setLayout(null);  
         f.setVisible(true);  
     }  
public static void main(String args[])  
{  
        new PopupMenuExample();  
}  
}  


Jtable with Database
Code:
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;


public class EmployeeDetails {
	
	private boolean status;

	public EmployeeDetails(String title) {

		// Creating Window using JFrame
		JFrame frame = new JFrame();
		frame.setTitle(title);
		frame.setSize(800, 500);

		// Adding Table View
		frame.add(getTablePanel());

		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}

	private JPanel getTablePanel() {

		JPanel tableJPanel = new JPanel();
		
		tableJPanel.setLayout(new BorderLayout());
		
		// Column Header
		String[] columns = {

		"Ëmployee ID", "Employee Name", "Employee Age",
				"Employee Qualification", "Employee Address" };

		// Getting Data for Table from Database
		Object[][] data = getEmployeeDetails();

		// Creating JTable object passing data and header
		JTable employeeTable = new JTable(data, columns);
		
		
		tableJPanel.add(employeeTable.getTableHeader(), BorderLayout.NORTH);
		tableJPanel.add(employeeTable, BorderLayout.CENTER);
		
		return tableJPanel;
	}

	private Object[][] getEmployeeDetails() {

		Object[][] data = null;

		final String DRIVER_NAME = "com.mysql.jdbc.Driver";
		final String CONNECTION_URL = "jdbc:mysql://localhost:3306/ems";
		final String USERNAME = "root";
		final String PASSWORD = "";

		final String QUERY = "Select empId, empName, empAge, empQualification, empAddress from employee_details";

		try {

			// Loading the Driver
			Class.forName(DRIVER_NAME);

			// Getting Database Connection Object by Passing URL, Username and Password
			Connection connection = DriverManager.getConnection(CONNECTION_URL, USERNAME, PASSWORD);

			Statement statement = connection.createStatement();

			ResultSet rs = statement.executeQuery(QUERY);

			int rowCount = getRowCount(rs); // Row Count
			int columnCount = getColumnCount(rs); // Column Count

			data = new Object[rowCount][columnCount];

			// Starting from First Row for Iteration
			rs.beforeFirst();

			int i = 0;
			
			while (rs.next()) {

				int j = 0;

				data[i][j++] = rs.getInt("empId");
				data[i][j++] = rs.getString("empName");
				data[i][j++] = rs.getInt("empAge");
				data[i][j++] = rs.getString("empQualification");
				data[i][j++] = rs.getString("empAddress");

				i++;
			}

			status = true;
			
			// Closing the Resources;
			statement.close();
			connection.close();
			
		} catch (Exception e) {

			e.printStackTrace();
		}

		return data;
	}

	// Method to get Row Count from ResultSet Object
	private int getRowCount(ResultSet rs) {

		try {
			
			if(rs != null) {
				
				rs.last();
				
				return rs.getRow(); 
			}
			
		} catch (SQLException e) {

			System.out.println(e.getMessage());
			e.printStackTrace();
		}
		
		return 0;
	}

	// Method to get Column Count from ResultSet Object
	private int getColumnCount(ResultSet rs) {

		try {

			if(rs != null)
				return rs.getMetaData().getColumnCount();

		} catch (SQLException e) {

			System.out.println(e.getMessage());
			e.printStackTrace();
		}

		return 0;
	}

	@Override
	public String toString() {
		
		return (status) ? "Data Listed Successfully" : "Application Error Occured";
	}
	
	public static void main(String[] args) {

		String title = "Employee Details Table";

		EmployeeDetails employeeDetails = new EmployeeDetails(title);

		System.out.println(employeeDetails);
	}
}

Jtree
Code:
import javax.swing.*;  
import javax.swing.tree.DefaultMutableTreeNode;  
public class TreeExample {  
JFrame f;  
TreeExample(){  
    f=new JFrame();   
    DefaultMutableTreeNode style=new DefaultMutableTreeNode("Style");  
    DefaultMutableTreeNode color=new DefaultMutableTreeNode("color");  
    DefaultMutableTreeNode font=new DefaultMutableTreeNode("font");  
    style.add(color);  
    style.add(font);  
    DefaultMutableTreeNode red=new DefaultMutableTreeNode("red");  
    DefaultMutableTreeNode blue=new DefaultMutableTreeNode("blue");  
    DefaultMutableTreeNode black=new DefaultMutableTreeNode("black");  
    DefaultMutableTreeNode green=new DefaultMutableTreeNode("green");  
    color.add(red); color.add(blue); color.add(black); color.add(green);      
    JTree jt=new JTree(style);  
    f.add(jt);  
    f.setSize(200,200);  
    f.setVisible(true);  
}  
public static void main(String[] args) {  
    new TreeExample();  
}}  


Combobox
Code:
import javax.swing.*;    
import java.awt.event.*;    
public class ComboBoxExample {    
JFrame f;    
ComboBoxExample(){    
    f=new JFrame("ComboBox Example");   
    final JLabel label = new JLabel();          
    label.setHorizontalAlignment(JLabel.CENTER);  
    label.setSize(400,100);  
    JButton b=new JButton("Show");  
    b.setBounds(200,100,75,20);  
    String languages[]={"C","C++","C#","Java","PHP"};        
    final JComboBox cb=new JComboBox(languages);    
    cb.setBounds(50, 100,90,20);    
    f.add(cb); f.add(label); f.add(b);    
    f.setLayout(null);    
    f.setSize(350,350);    
    f.setVisible(true);       
    b.addActionListener(new ActionListener() {  
        public void actionPerformed(ActionEvent e) {       
String data = "Programming language Selected: "   
   + cb.getItemAt(cb.getSelectedIndex());  
label.setText(data);  
}  
});           
}    
public static void main(String[] args) {    
    new ComboBoxExample();         
}    
}


Confirm on exit
Code:
package test;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class ConfirmExitDialog extends JFrame {

    public ConfirmExitDialog() {

        super("Confirm Exit Dialog Example");
        this.setSize(350, 150);
        Container contentPane = this.getContentPane();
        contentPane.setLayout(new BorderLayout());
        JLabel label1 = new JLabel("Confirm Exit Dialog Example", JLabel.LEFT);
        contentPane.add(label1, BorderLayout.SOUTH);
        
    }

    protected void processWindowEvent(WindowEvent e) {

        if (e.getID() == WindowEvent.WINDOW_CLOSING) {
        
            int exit = JOptionPane.showConfirmDialog(this, "Are you sure?");
            if (exit == JOptionPane.YES_OPTION) {
                System.exit(0);
            }
            
        } else {

            super.processWindowEvent(e);
        }
    }

    public static void main(String[] args) {
        ConfirmExitDialog mainFrame = new ConfirmExitDialog();
        mainFrame.setVisible(true);
    }
    
}


Simpleattributeset
Code:
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

public class JavaJTextPaneExample {

	public static void main(String args[]) throws BadLocationException {
		
		JFrame jf = new JFrame("StyledText");
		jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Container cp = jf.getContentPane();

		JTextPane pane = new JTextPane();
		SimpleAttributeSet set = new SimpleAttributeSet();
		StyleConstants.setBold(set, true);

		pane.setCharacterAttributes(set, true);
		pane.setText("JavaScan.com");

		set = new SimpleAttributeSet();
		StyleConstants.setItalic(set, true);
		StyleConstants.setForeground(set, Color.red);
		StyleConstants.setBackground(set, Color.blue);

		Document doc = pane.getStyledDocument();
		doc.insertString(doc.getLength(), "Swing ", set);

		set = new SimpleAttributeSet();
		StyleConstants.setFontSize(set, 24);

		doc.insertString(doc.getLength(), "Tutorial", set);

		JScrollPane scrollPane = new JScrollPane(pane);
		cp.add(scrollPane, BorderLayout.CENTER);

		jf.setSize(400, 300);
		jf.setVisible(true);
		
	}
}



Jprogressbar
Code:
import javax.swing.*;    
public class ProgressBarExample extends JFrame{    
JProgressBar jb;    
int i=0,num=0;     
ProgressBarExample(){    
jb=new JProgressBar(0,2000);    
jb.setBounds(40,40,160,30);         
jb.setValue(0);    
jb.setStringPainted(true);    
add(jb);    
setSize(250,150);    
setLayout(null);    
}    
public void iterate(){    
while(i<=2000){    
  jb.setValue(i);    
  i=i+20;    
  try{Thread.sleep(150);}catch(Exception e){}    
}    
}    
public static void main(String[] args) {    
    ProgressBarExample m=new ProgressBarExample();    
    m.setVisible(true);    
    m.iterate();    
}    
}    


Jcolorchooser
Code:
package test;
import javax.swing.*;  
import java.awt.*;  
import java.awt.event.*;  
public class ColorChooserExample extends JFrame implements ActionListener{  
JFrame f;  
JButton b;  
JTextArea ta;  
ColorChooserExample(){  
    f=new JFrame("Color Chooser Example.");  
    b=new JButton("Pad Color");  
    b.setBounds(200,250,100,30);  
    ta=new JTextArea();  
    ta.setBounds(10,10,300,200);  
    b.addActionListener(this);  
    f.add(b);f.add(ta);  
    f.setLayout(null);  
    f.setSize(400,400);  
    f.setVisible(true);  
}  
public void actionPerformed(ActionEvent e){  
    Color c=JColorChooser.showDialog(this,"Choose",Color.CYAN);  
    ta.setBackground(c);  
}  
public static void main(String[] args) {  
    new ColorChooserExample();  
}  
}


Splitpane planets
Code:
import java.awt.*;
import java.applet.*;
import javax.swing.*;
import javax.swing.event.*;
public class abc extends JFrame implements ListSelectionListener {

   JSplitPane jp;
   JLabel jl;
   JList jb;
   ImageIcon i1,i2,i3;
   abc()
   {
      Container c=getContentPane();
      setTitle("SplitPane");
      setSize(500,500);
      setVisible(true);
      setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      String s[]={"earth","mars","saturn"};
      jb=new JList(s);
      jb.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      i1=new ImageIcon("earth.jpg");
       i2=new ImageIcon("mars.jpg");
        i3=new ImageIcon("saturn.jpg");
        jl=new JLabel(i1);
        jp=new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);
        jp.setLeftComponent(jb);
        jp.setRightComponent(jl);
      
        jb.addListSelectionListener(this);
        c.add(jp);
    }
    public static void main(String[] args) {
      abc s=new abc();
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        String s=(String)jb.getSelectedValue();
        if(s.equals("earth"))
        {
            jl.setIcon(i1);
            
        }
        else if(s.equals("mars"))
        {
            jl.setIcon(i2);
            
        }
        else
        {
            jl.setIcon(i3);
            
        }
    }



Jtabbedpane
package test;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JFrame;
import java.awt.*;
import java.awt.event.*;

class AddJTabbedPane 
{
	JTabbedPane tp;
	JLabel lab1, lab2, lab3, lab4, lab5, lab6, lab7, lab8;
	JPanel fruit, vegetable;
	JButton btn1, btn2;
	JFrame frame;
	public void createUI()
	{
		frame=new JFrame("JTabbedPane Example");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		fruit = new JPanel(new GridLayout(6,2));
		lab1=new JLabel("Apple");
		lab2=new JLabel("Orange");
		lab3=new JLabel("Papaya");
		lab4=new JLabel("Pine Apple");
		fruit.add(lab1);
		fruit.add(lab2);
		fruit.add(lab3);
		fruit.add(lab4);

		vegetable = new JPanel(new GridLayout(6,2));
		lab5=new JLabel("Cauliflower");
		lab6=new JLabel("Brinjal");
		lab7=new JLabel("Peas");
		lab8=new JLabel("Lady finger");
		vegetable.add(lab5);
		vegetable.add(lab6);
		vegetable.add(lab7);
		vegetable.add(lab8);
		
		tp=new JTabbedPane();
        Container pane = frame.getContentPane();
		pane.add(tp);
		tp.addTab("Fruit",fruit);
		tp.addTab("Vegetable",vegetable);

		frame.setSize(200,200);
		frame.setVisible(true);

	}	
	public static void main(String[] args) 
	{
		AddJTabbedPane tbp = new AddJTabbedPane();
		tbp.createUI();		
	}
}


Calculator Servlet
Code:
//index.html
<!DOCTYPE html>
<html>
    <head>
        <title>Calculator</title>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        <form method="post" action="calculator">
            <h1> CALCULATOR </h1>
            <hr>
            <b> Enter First Number </b>
            <input type="text" name="t1" >
            <p></p>
            <b>  Enter second Number </b>
            <input type="text" name="t2" >
            <p></p>
            <input type="submit" name="c" value="Add">
            <input type="submit" name="c" value="Subtract">
            <input type="submit" name="c" value="Multiply">
            <input type="submit" name="c" value="Divide">
        </form>
    </body>
</html>

//calculator.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException; 
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@WebServlet(urlPatterns = {"/calculator"})
public class calculator extends HttpServlet {
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            int a = Integer.parseInt(request.getParameter("t1"));
            int b = Integer.parseInt(request.getParameter("t2"));
            String op = request.getParameter("c");
            if (op.equals("Add")) {
                out.println("Addition is " + (a + b));
            } else if (op.equals("Subtract")) { 
                out.println("Subtraction is is " + (a - b));
            }
            else if (op.equals("Multiply")) {
                out.println("Multiplication  is " + (a * b));
            } else {
                out.println("Division  is " + (a / b));
            }
            out.close();
        }
    }}


Question and answer
Question.html
<html>
    <head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>Question</title>
     </head>
       <body>
            <h1>Question</h1>
            <form action="Answer" method="post">
                <h1>Most Popular Search Engine?</h1>
                <input type="radio" name="se" value="y">Yahoo<br />
                <input type="radio" name="se" value="b">Bing<br />
                <input type="radio" name="se" value="g">Google<br />
                <input type="submit" name="submit">
            </form> 

        </body>
    </html>

Answer.java
import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
public class Answer extends HttpServlet {    
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();
        try { String a;
            a=request.getParameter("se");
        if(a.equals("g")) out.print("!@Correct Answer@!");
        else out.print("Please Try Again!");
        } finally { out.close();}  
    }	
}


RequestDispatcher
First page
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>Rquest dispatcher</h1>
        <form name="f1" action="rrd2.jsp" method="post">
            <input type="text" name="t1">
            <input type="submit" name="s1">            
        </form>     
            </body></html>

Forward page
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>Hello World! finally. this is called by forward</h1>
    </body>
</html>

Included page
<%@page import="javax.servlet.*" %>
<%String a=request.getParameter("t1");
try{
RequestDispatcher d=null;
if(a.equals("abcdefgji")){ d=request.getRequestDispatcher("move.jsp");d.forward(request, response);
}
else{d=request.getRequestDispatcher("rrd2"); d.include(request, response);}}
catch(Exception e){e.getMessage();}%>
<html>
    <head>
        <title>           
        </title>
    </head>
    <body>
        <h1>this is called by include</h1>
    </body></html>



Jsf built in validation
Code:
mobile.xhtml

<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html">
<h:head>
</h:head>
<h:body>
	<h3>Add Mobile Details</h3>
	<h:form>
		<h:panelGrid columns="3">
			<h:outputLabel for="mname">Mobile Name:</h:outputLabel>
			<h:inputText id="mname" required="true"
				requiredMessage="Mobile Name is mandatory"></h:inputText>
			<br>
			<br>

			<h:outputLabel for="color">Color:</h:outputLabel>
			<h:inputText id="color" required="true"></h:inputText>
			<br>
			<br>

			<h:outputLabel for="model">Model Number:</h:outputLabel>
			<h:inputText id="model"></h:inputText>
			<br>
			<br>

			<h:commandButton value="Submit"></h:commandButton>
		</h:panelGrid>
	</h:form>
</h:body>
</html>

mob.xhtml

<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html">
<h:head>
</h:head>
<h:body>
	<h3>Add Mobile Details</h3>
	<h:form>
		<h:outputLabel for="mno">Model Number:</h:outputLabel>
		<h:inputText id="mno" value="#{mobile.mno}" required="true" size="4"
			disabled="#{mobile.mno}" validator="#{mobile.validateModelNo}">
		</h:inputText>
		<h:commandButton value="Submit"></h:commandButton>
	</h:form>
</h:body>
</html>

Mobile.java

package com.journaldev.jsf.bean;

import java.io.Serializable;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.UIComponent;
import javax.faces.component.UIInput;
import javax.faces.context.FacesContext;

@ManagedBean
@SessionScoped
public class Mobile implements Serializable {

	private static final long serialVersionUID = -7250065889869767422L;

	// @NotNull(message="Please enter the model number")
	private String mno;

	public String getMno() {
		return mno;
	}

	public void setMno(String mno) {
		this.mno = mno;
	}

	public void validateModelNo(FacesContext context, UIComponent comp,
			Object value) {

		System.out.println("inside validate method");

		String mno = (String) value;

		if (mno.length() < 4) {
			((UIInput) comp).setValid(false);

			FacesMessage message = new FacesMessage(
					"Minimum length of model number is 4");
			context.addMessage(comp.getClientId(context), message);

		}

	}

}



Create Login Page in JSF.

//Index.xhtml
<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
xmlns:h="http://xmlns.jcp.org/jsf/html"
xmlns:f="http://xmlns.jcp.org/jsf/core">
<h:head>
<title>LOGIN</title>
</h:head>
<h:body>
<f:view>
<h:form id="LoginApplication">
<h:panelGrid id="lpg" columns="2">
<h:outputText value="User ID"/>
<h:inputText id="loginid" value="#{SimpleLogin.loginid}"/>
<h:outputText value="Password"/>
<h:inputText id="password" value="#{SimpleLogin.password}"/>
<h:outputText value=""/>
<h:commandButton value="Login" action="#{SimpleLogin.CheckValidUser}"/>
</h:panelGrid>
</h:form>
</f:view>
</h:body>
</html>

//Success.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Success Page</title>
</head>
<body>
<h2>Welcome!</h2>
</body>
</html>


//Fail.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Fail Page</title>
</head>
<body>
<h2>Please try again!</h2>
</body>
</html>


//faces-config.xml

<?xml version='1.0' encoding='UTF-8'?>
<faces-config version="2.2"
xmlns="http://xmlns.jcp.org/xml/ns/javaee"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-facesconfig_2_2.xsd">
<managed-bean>
<managed-bean-name>SimpleLogin</managed-bean-name>
<managed-bean-class>eg1.SimpleLogin</managed-bean-class>
<managed-bean-scope>request</managed-bean-scope>
</managed-bean>
<navigation-rule>
<from-view-id>/index.xhtml</from-view-id>
<navigation-case>
<from-action>#{SimpleLogin.CheckValidUser}</from-action>
<from-outcome>success</from-outcome>
<to-view-id>/success.jsp</to-view-id>
</navigation-case>
<navigation-case>
<from-action>#{SimpleLogin.CheckValidUser}</from-action>
<from-outcome>fail</from-outcome>
<to-view-id>/fail.jsp</to-view-id>
</navigation-case>
</navigation-rule>
</faces-config>

//SimpleLogin.java

package eg1;
public class SimpleLogin {
String loginid;
String password;
public String getLoginid()
{
return loginid;
}
public void setLoginid(String loginid)
{
this.loginid = loginid;
}
public String getPassword()
{
return password;
}
public void setPassword(String password)
{
this.password = password;
}
public String CheckValidUser()
{
if(loginid.equals("Alice") && password.equals("12345")){
return "success";
}
else
{
return "fail";
}
}
}



) Develop a Jsp  application to accept Registration Details and Store it in the database.
Register.html
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Register</title>
    </head>
    <body>
        <form action="register.jsp" method="post">
          NAME: <input type="text" name="name">
          ROLL NO: <input type="text" name="rollno">
          PASSWORD:  <input type="password" name="pass">	
          <input type="submit" name="submit">
        </form>
    </body>
</html>

Register.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%@page import="java.sql.*"%>
<% 
String name, pass; int rollno;
name=request.getParameter("name");
rollno=Integer.parseInt(request.getParameter("rollno"));
pass=request.getParameter("pass");
try{
    Class.forName("com.mysql.jdbc.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/stud","root","root");
    String query="insert into detail values(?,?,?)";
    PreparedStatement ps=con.prepareStatement(query);
    ps.setString(1,name);
    ps.setInt(2,rollno);
    ps.setString(3,pass);
    ps.executeUpdate();
    con.close();	
    ps.close();
    out.println("Registered Successfully.");
}catch(Exception e){} %>


) Develop a jsp application to authenticate user login as per the registration details. If login success the forward user to Index page otherwise show login failure message.
Login.html
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Login Form</title>
    </head>
    <body>
          <h1>Login</h1>
          <form action="login.jsp" method="post">
          Username: <input type="text" name="username" /><br /> 
          PASSWORD:  <input type="password" name="password" /><br />
          <input type="submit" name="submit" />
        </form>
    </body>
</html>

Login.jsp
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<%@page import="java.sql.*"%>
<% String username, password;
username = request.getParameter("password");
password = request.getParameter("username");
try{
    Class.forName("com.mysql.jdbc.Driver");
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/stud","root","root");
    String query="select * from detail where username=? and password=?";
    PreparedStatement ps=con.prepareStatement(query);
           ps.setString(1, username);
           ps.setString(2, password);
           ResultSet result=ps.executeQuery();
           String u, p;
           while(result.next()){
             u=result.getString("username");
             p=result.getString("password");             
             if(u.equals(username) && p.equals(password)) out.print("Login Successful.");
             else out.print("Login Failed");
           } 
           con.close();
           ps.close();
} 
catch(Exception e){} %>


Applet mouse listeners events
Code:
import java.awt.*;
import java.awt.event.*;
import java.applet.*;
/*
<applet code="Mouse" width=500 height=500>
</applet>
*/
public class Mouse extends Applet
implements MouseListener,MouseMotionListener
{
	int X=0,Y=20;
	String msg="MouseEvents";
	public void init()
	{
		addMouseListener(this);
		addMouseMotionListener(this);
		setBackground(Color.black);
		setForeground(Color.red);
	}
	public void mouseEntered(MouseEvent m)
	{
		setBackground(Color.magenta);
		showStatus("Mouse Entered");
		repaint();
	}
	public void mouseExited(MouseEvent m)
	{
		setBackground(Color.black);
		showStatus("Mouse Exited");
		repaint();
	}
	public void mousePressed(MouseEvent m)
	{
		X=10;
		Y=20;
		msg="NEC";
		setBackground(Color.green);
		repaint();
	}
	public void mouseReleased(MouseEvent m)
	{
		X=10;
		Y=20;
		msg="Engineering";
		setBackground(Color.blue);
		repaint();
	}
	public void mouseMoved(MouseEvent m)
	{
		X=m.getX();
		Y=m.getY();
		msg="College";
		setBackground(Color.white);
		showStatus("Mouse Moved");
		repaint();
	}
	public void mouseDragged(MouseEvent m)
	{
		msg="CSE";
		setBackground(Color.yellow);
		showStatus("Mouse Moved"+m.getX()+" "+m.getY());
		repaint();
	}
	public void mouseClicked(MouseEvent m)
	{
		msg="Students";
		setBackground(Color.pink);
		showStatus("Mouse Clicked");
		repaint();
	}
	public void paint(Graphics g)
	{
		g.drawString(msg,X,Y);
	}
}


EJB app SI and CI

//Index.html

<html>
<head>
<title>java</title>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
<div>Enter the detail</div>
<form method="post" action="n17">
principal : <input type="text" name="t1"><br>
<br>
rate : <input type="text" name="t2"><br>
<br>
no. of years : <input type="text" name="t3">
<br>
<input type="submit" value="submit">
</form>
</body>
</html>

//n17.java (Servlet file)

package n17;
import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import s1.s1;
public class n17 extends HttpServlet {
@EJB
private s1 s1;
protected void processRequest(HttpServletRequest request, HttpServletResponse response)
throws ServletException, IOException {
response.setContentType("text/html;charset=UTF-8");
try (PrintWriter out = response.getWriter()) {
float pt=Float.parseFloat(request.getParameter("t1"));
float rt=Float.parseFloat(request.getParameter("t2"));
float nt=Float.parseFloat(request.getParameter("t3"));
float jt=s1.SI(pt, nt, rt);
out.println("simple intrest\n"+jt );
double ct=s1.CI(pt, nt, rt);
out.println("\n compount interest"+ct);
}
}
}


//s1.java (EJB file)

package s1;
import javax.ejb.Stateless;
@Stateless
public class s1 {
public double CI(float p,float r,float n)
{
double num=p*Math.pow(1+r/100, n);
return num;
}
public float SI(float p, float n, float r)
{
float j=p*n*r;
return j;
}
}


Session ejb
Code:
ExampleBeanClient.java

import java.util.Properties;

import javax.naming.InitialContext;
import javax.naming.NamingException;
import com.ejbs.ExampleBeanRemote;

public class ExampleBeanClient {

public static void main(String[] args) {
try {
Properties props = new Properties();
props.setProperty("java.naming.factory.initial",
"org.jnp.interfaces.NamingContextFactory");
props.setProperty("java.naming.factory.url.pkgs",
"org.jboss.naming");
props.setProperty("java.naming.provider.url", "127.0.0.1:1099");

InitialContext ctx = new InitialContext(props);
ExampleBeanRemote exampleBean = (ExampleBeanRemote) ctx
.lookup("ExampleBean/remote");
System.out.println("Message from Bean :" + exampleBean.getMessage());
} catch (NamingException e) {
e.printStackTrace();
}

}

}





