
a. Implement a linux server system with an ip address
192.168.0.45 and update the hostname as ServerXX (XX
stands for rollno)

==> ifconfig [interface_name] 192.168.0.45
commands on server
==>	ifconfig eth0 192.168.0.45
==> hostname ServerXX

commands on client
==> ifconfig eth0 192.168.0.24
==> hostname ClientXX

c. Restart the basic services essential for any network
configurations.
==> service network start|restart|stop|status
or
==> systemctl start|stop|restart|status network

d. Add a normal user and login using any of the terminal
and resume back to the GNOME terminal
change to root or use sudo before the command
make sure user is added to sudoers file
==> adduser [username]
or
==> sudo adduser [username]
set password
==> passwd [password]
or
==> sudo passwd [password]

e. Create a folder with your name and give full access
rights to that folder in server
on server
==> mkdir [yourname]
==> chmod +777 [yourname]

f. Create a folder with another name and give only read,
write access to that folder in client.
on client
==> mkdir [any_folder_name]
==> chmod a=rw [name_of_above_folder_created]

------------------------------------------------------------------------

network file system [nfs]

# ifconfig eth0 192.168.1.3
# cd /home
# mkdir servernfs
# cd servernfs
# cat > newfile
type file content
Ctrl+D

# vi /etc/exports
#[write in file following]
/home/servernfs *(rw, sync)
:wq

# service nfs restart
# service iptables stop
# service iptables status
# showmount -e 192.168.1.3
# service vsftpd stop
# service vsftpd status
# chmod -R 777 /home/servernfs
# cd /home
# ls
# mkdir clientnfs
# mount -t nfs 192.168.1.3:/home/servernfs /home/clientnfs
# cd clientnfs
# ls

-----------------------------------------------------------------------------

Configuring Apache Web Server In Linux

#rpm –ivh httpd*
#rpm –qa | grep httpd

#ifconfig eth0 192.168.1.1
#ifconfig

start httpd daemons and verify its running status
#chkconfig httpd on
#service httpd start
#service httpd status

#mkdir –p /var/www/virtual/www.svkm.com/html
#vim /var/www/virtual/www.svkm.com/html/index.html
<html>
<head>
<title> Linux Apache Website</title>
<body>
Today we complete Apache web server practical.
</body>
</head>
</html>

: wq 

# dig –x 192.168.1.1

#vim /etc/httpd/conf/httpd.conf
locate "<VirtualHost>"

Remove the comments from all 7 lines

<Virtual Host *:80> 
ServerAdmin root@server.svkm.com
Document Root /var/www/virtual/server.svkm.com/html
ServerName www.svkm.com
ErrorLog logs/server.svkm.com-error_log
CustomLog logs/server.svkm.com-access_log
common
</Virtual Host>

 :wq 

 #service httpd restart

chmod –R 777 /var/www/virtual/www.svkm.com/html

 open browser and type
server.svkm.com OR 192.168.1.1

#links 192.168.1.1

-------------------------------------------------------------------


Linux System Administration basic commands

Becoming super user:

# useradd smith
# passwd smith
[type passwords]

# vi /etc/sudoers
smith ALL=(ALL) ALL
:wq

# su smith
# sudo adduser john
# sudo passwd john
# su john
[enter password]

useradd command with its options
# useradd -c "this is akshay's account" -u 612 -o -s /sbin/bash akshay

chage password policy change
# change -m 10 -M 20 -E 10/10/2017 -W 7 akshay
chage -l akshay

passwd command to lock or unlock user's password
# passwd -u akshay

# passwd -l akshay

chsh command to change the shell of user
# chsh -s /sbin/nologin akshay

Groupadd command to create a new group and gpasswd command to add members and administrator in the group:

# groupadd tyit
# gpasswd -M john,smith,jackson -A john tyit
# vim /etc/group

shutdown
shutdown after 5 minutes:
# shutdown -h +5

shutdown with particular broadcast message
# shutdown -h +7 "Please save your work.. server is shutting down"

reboot after 5 minutes:
# shutdown -r +5 "Save your work"

users file
# vi /etc/passwd

passwords file
# vi /etc/shadow





------------------------------------------------------------------------


-------------------------------------------------------------------

The System is being used for Network File Sharing. Make
automatically start the nfs and Portmap service to be on at
boot time .

chkconfig portmap on
chkconfig nfs on
chkconfig nfslock on

---------------------------------------------------------------

change hostname

hostname [new hostname]

------------------------------------------------------------------------

Create user ‘ty’ and change the password ageing policies for
the user

==> adduser ty
==> passwd ty
==> [enter new password]

Using chage

Now let's set ty's password to expire on July 10, 2016. The command would be:

sudo chage -E 2016-07-10 ty


The basic structure for the chage command looks like:

chage [options] USERNAME

You can choose from plenty of options—the most immediately useful of those options are:

-E Set the expire date for a user password. The date is expressed in the format YYYY-MM-DD.
-I Set the number of inactive days allowed, after a password expires, before the account is locked.
-l List the account aging information.
-m Set the minimum number of days allowed between password changes. Setting this option to 0 allows the user to change their password at any time.
-M Set the maximum number of days in which a password is valid.
-W Set the number of days of warning before a user must change their password.

------------------------------------------------------------------------

Apply the immutable attribute for file ‘linux’ in the home
directory of root.

change to sudo or root
==> chattr +i filename
==> lsattr filename
==> ----i--------  filename

------------------------------------------------------------------------

Configure a Linux server system to assign IP addresses
dynamically to the client system. [configure dhcp server]

Subnet and Netmask should be 192.168.0.0 and
255.255.255.0
Gateway Should be 192.168.1.254
DNS Server Should be 192.168.1.254
Domain Name should be university.com
Range from 192.168.1.10-192.168.1.50
Implement for both linux client and windows client

make sure dhcp is installed
==> rpm -qa dhcp

To configure a DHCP server, modify the configuration file /etc/dhcpd.conf.
if does not exist create new file
put following inside it

#-----------starts here-------------

option domain-name "elinuxbook.com";   
option domain-name-servers 192.168.1.254;

default-lease-time 600;
max-lease-time 7200;

# Use this to enble / disable dynamic dns updates globally.
#ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

subnet 192.168.0.0 netmask 255.255.255.0 {
        option routers                  192.168.1.254;
        option subnet-mask              255.255.255.0;

        option domain-name              "university.com";
        option domain-name-servers       192.168.1.254;

        option time-offset              -18000;     # Eastern Standard Time

	range 192.168.1.10 192.168.1.50;
}
#------ends here-------

==> /etc/init.d/dhcpd start   # Start the DHCP Server Service
==> chkconfig --level 35 dhcpd on   # Start DHCP Service at Startup
==> chkconfig --list dhcpd   # Confirm the Startup Configuration


---------------------------------------------------------------------------


set static ip to system
To configure static IP address in RHEL / CentOS / Fedora, you will need to edit:
/etc/sysconfig/network
/etc/sysconfig/network-scripts/ifcfg-eth0

# vi /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=node01.tecmint.com
GATEWAY=192.168.0.1
NETWORKING_IPV6=no
IPV6INIT=no

# vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0"
BOOTPROTO="static"
DNS1="8.8.8.8"
DNS2="4.4.4.4"
GATEWAY="192.168.0.1"
HOSTNAME="node01.tecmint.com"
HWADDR="00:19:99:A4:46:AB"
IPADDR="192.68.0.100"
NETMASK="255.255.255.0"
NM_CONTROLLED="yes"
ONBOOT="yes"
TYPE="Ethernet"
UUID="8105c095-799b-4f5a-a445-c6d7c3681f07"


# vi /etc/resolv.conf
nameserver 8.8.8.8 # Replace with your nameserver ip
nameserver 4.4.4.4 # Replace with your nameserver ip

# /etc/init.d/network restart  
# systemctl restart network    

--------------------------------------------------------------------------

Configure your linux system as a squid server with IP
address 192.168.2.240 with different access control lists
and block www.gmail.com for the client with IP address
192.168.2.220

#rpm –ivh squid*
- check the hostname and ip address of server it will be use in editing of
squid.conf
#hostname tyit
#ifconfig eth0 192.168.2.240

backup squid.conf
# cp /etc/squid/squid.conf /etc/squid/squid.conf.bakup

#Vi /etc/squid/squid.conf
set following in file

acl deny_host src 192.168.2.220 		#client ip, if server, client same, same as server_ip
acl allow_network src 192.168.1.0/24
acl web_deny dstdomain “/etc/squid/web_deny”

Look for a line ‘squid normally listens to port no 3128’
write this below the line
==> http_port 3128

Save the file. :wq

 # vi /etc/squid/web_deny 
 write in the file following:
www.gmail.com

:wq

#service squid start
#chkconfig squid on
#service squid restart

now configure the client browser to use manual proxy
HTTP Proxy server: 192.168.2.240
port: 3128

----------------------------------------------------------------------------

Configure a Samba on Linux server and transfer files to a
windows client.

Settings to be done in Windows
Go to “My Computer” -> “Network” -> Right Click on “Properties”
Prepared By :1) Prof. Sweta Chheda 2) Prof. JagdishSanas Page 53
Go to the option “Change adapter settings” -> Right click on “VMWare Network
Adapter VMnet1” -> Click “IPV4” - > Click on “Properties” button -> Set IP
Address Example : 192.168.1.1 -> Click “OK” -> Click “Close”

on linux virtual machine
# ifconfig eth0 192.168.1.3

# rpmquery –qa | grep samba
# cd /home
# mkdir tyit
# cd tyit
# touch f1 f2 f3 
#cat > test
// Write the contents
Hello my First Samba file to be shared
Press <ctrl+d> to save the file.

# chmod –R 777 /tyit/
# vi /etc/samba/smb.conf
set following

[tyit]
comment = samba stuff
path = /home/tyit
public=yes
writable =yes
;printable =yes
write list = Admin Administrator

save

#] service smb start
#] service smb restart
#] testparm
# service iptables stop
# service iptables status

to give temporary read permissions
# setenforce 0

# getsebool –a | grep samba
# setsebool samba_enable_home_dirs=1
# setsebool samba_create_home_dirs=1
# getsebool –a | grep samba
# service smb restart

Create a samba user and assign password
# useradd test1
# smbpasswd –a test1
Enter the password and confirm password

# service smb restart

Go to Windows
Run Command
Type ping 192.168.1.3 -t

Check whether reply and response is working fine.
Now to check whether files are been transferred from Samba to Windows
Win+R Run - > \\192.168.1.3





-------------------------------------------------------------------------

grub configuration

#vi /boot/grub/grub.conf

To edit the configuration file : Go to Insert mode (press ‘i’)
(2) Add a new entry to the configuration file:
(a) The new entry should have the title “Red Hat Recovery”.
(b) The new entry should not be the default.
(c) Change the timeout of the boot selection to 10 seconds.

• Default=0 - This line tells grub to boot the kernel with the first title in the file.
•Timeout=5 - This line tells the grub to boot the default kernel after 5 seconds. 

---------------------------------------------------------------------

ftp file transfer program

#rpm –qa | grep vsftpd
#rpm – ivh vsftpd*
#rpm –ivh ftp*

# chkconfig vsftpd on
# cd /var/ftp/pub/
# cat > ftpfile
This is my ftp file for testing
Ctrl+D

# ifconfig eth0 192.168.1.1
#vi /etc/vsftpd/vsftpd.conf

I. Uncomment anonymous _enable = YES
II. Uncomment local_enable = YES
III. Uncomment anonymous_upload_enable = YES
IV. Uncomment listen = YES

#service vsftpd restart

login with 
# ftp 192.168.1.1
username: anonymous
password: blank

ftp> ls -a
To Log off from ftp
ftp> bye

#getsebool –a | grep ftp
#setsebool –P allow_ftp_annon_write on or = 1
#getsebool –a | grep ftp
#setsebool –P ftp_home_dir on
#getsebool –a | grep ftp

By default /var/ftp is ftp user Home directory. Check the context of file
/var/ftp/pub and change to ftp
#ls –ldz /var/ftp/pub
#chgrp ftp /var/ftp/pub
#chown ftp /var/ftp/pub
#ls –ldz /var/ftp/pub

#cd /var/ftp/pub
#touch T1 T2 T3
#cat > ftptest
Welcome to ftp server
To save the document use ctrl+d

service vsftpd start
#service vsftpd restart
#chkconfig vsftpd on
#chkconfig –list | grep vsftpd

#ftp 192.168.1.1

Disabling anonymous FTP login :
#vi /etc/vsftpd/vsftpd.conf
#[set following]
anonymous _enable = NO
anonymous_upload_enable = NO.

#service vsftpd restart
#ftp 192.168.1.1

ftp>pwd
ftp>ls
ftp>bye

#vi /etc/vsftpd/user_list

#service vsftpd restart.

get and put command to upload and download the file.
Now create one txt file at shreyash /home directory
#cd /home
#pwd
#cd shreyash
#pwd
#cat > test.txt
hi… this file is created by shreyash.
To save and exit press ctrl+d

-------------------------------------------------------------------------
gcc

#vim hello.c
#gcc hello.c –o hello.out
#./hello.out


#vim palin.c
Code:
#include <stdio.h>
int main()
{
    int n, reversedInteger = 0, remainder, originalInteger;

    printf("Enter an integer: ");
    scanf("%d", &n);

    originalInteger = n;

    // reversed integer is stored in variable 
    while( n!=0 )
    {
        remainder = n%10;
        reversedInteger = reversedInteger*10 + remainder;
        n /= 10;
    }

    // palindrome if orignalInteger and reversedInteger are equal
    if (originalInteger == reversedInteger)
        printf("%d is a palindrome.", originalInteger);
    else
        printf("%d is not a palindrome.", originalInteger);
    
    return 0;
}

#gcc palin.c –o palin.out
#./palin.out